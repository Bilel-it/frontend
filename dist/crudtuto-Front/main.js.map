{"version":3,"file":"main.js","mappings":"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","names":["Product","ProductService","constructor","httpClient","this","getAllProducts","get","API_URL","addProduct","product","post","editProduct","put","deleteProduct","idProduct","delete","core","factory","i0","ProductsComponent","productService","modalService","ngOnInit","idProduit","codeProduit","libelleProduit","prix","dateCreation","dateDerniereModification","subscribe","res","listProducts","p","form","open","content","action","ariaLabelledBy","result","then","closeResult","reason","getDismissReason","ModalDismissReasons","cancel","selectors","Stock","StockService","getAllStocks","addStock","stock","editStock","deleteStock","idStock","StockComponent","stockService","getAllStockss","libelleStock","qte","qteMin","listStocks","ReglementService","addReglement","reglement","getAllReglements","ReglementComponent","reglementService","getAllReg","idReglement","dateReglement","payee","montantRestant","montantPaye","listReglement","f","SecteurActivite","SecteurActiviteService","getAllSecteurActivites","addSecteurActivite","secteurActivite","editSecteurActivite","deleteSecteurActivite","idSecteurActivite","SecteurActiviteComponent","secteurActiviteService","getAllSec","sec","codeSecteurActivite","libelleSecteurActivite","listSec","addSec","editSec","deleteSec","idSec","Operateur","OperateurService","getAllOperateurs","addOperateur","operateur","editOperateur","deleteOperateur","idOperateur","OperateurComponent","operateurService","nom","prenom","password","listOperateurs","o","FactureService","getAllFactures","addFacture","facture","FactureComponent","factureService","idFacture","dateCreationFacture","montantFacture","dateDerniereModificationFacture","montantRemise","archivee","listFactures","routes","path","component","redirectTo","pathMatch","AppRoutingModule","RouterModule","NavbarComponent","AppComponent","AppModule","bootstrap","BrowserModule","HttpClientModule","FormsModule","NgbModalModule","NgbModule","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","sources":["./src/app/shared/Model/Product.ts","./src/app/shared/Service/Product.service.ts","./src/app/products/products.component.html","./src/app/products/products.component.ts","./src/app/shared/Model/Stock.ts","./src/app/shared/Service/Stock.service.ts","./src/app/stock/stock.component.html","./src/app/stock/stock.component.ts","./src/app/shared/Service/Reglement.service.ts","./src/app/reglement/reglement.component.html","./src/app/reglement/reglement.component.ts","./src/app/shared/Model/Secteur-activite.ts","./src/app/shared/Service/Secteur-activite.service.ts","./src/app/secteur-activite/secteur-activite.component.html","./src/app/secteur-activite/secteur-activite.component.ts","./src/app/shared/Model/Operateur.ts","./src/app/shared/Service/Operateur.service.ts","./src/app/operateur/operateur.component.html","./src/app/operateur/operateur.component.ts","./src/app/shared/Service/Facture.service.ts","./src/app/facture/facture.component.html","./src/app/facture/facture.component.ts","./src/app/app-routing.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export class Product {\n    idProduit : any;\n    codeProduit : any;\n    libelleProduit : any;\n    prix : any;\n    dateCreation:any;\n    dateDerniereModification:any;\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  readonly API_URL = 'http://localhost:8089/SpringMVC/produit';\n\n  constructor(private httpClient: HttpClient) { }\n  getAllProducts() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-produits`)\n  }\n  addProduct(product : any) {\n    return this.httpClient.post(`${this.API_URL}/add-produit`, product)\n  }\n  editProduct(product : any){\n    return this.httpClient.put(`${this.API_URL}/modify-produit`, product)\n  }\n  deleteProduct(idProduct : any){\n    return  this.httpClient.delete(`${this.API_URL}/remove-produit/${idProduct}`)\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-11\" style=\"margin-left: 20px\">\n    <h3 style=\"margin-top: 20px\">List Product </h3>\n    <hr>\n    <button class=\"btn btn-round btn-sm btn-success\" (click)=\"open(mymodal1,null)\">Add new Product</button>\n    <br><br>\n    <table class=\"table table-hover\">\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Code</th>\n        <th>Name</th>\n        <th>Price</th>\n        <th>Create Date</th>\n        <th>Update Date</th>\n        <th>Action</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor='let p of listProducts'>\n        <td>{{p.idProduit}}</td>\n        <td>{{p.codeProduit}}</td>\n        <td>{{p.libelleProduit}}</td>\n        <td>{{p.prix}}</td>\n        <td>{{p.dateCreation}}</td>\n        <td>{{p.dateDerniereModification}}</td>\n        <td>\n          <button type=\"button\" class=\"btn btn-outline-primary\"\n                  (click)=\"open(mymodal1,p)\">Edit\n          </button>\n          &nbsp;\n          <button type=\"button\" class=\"btn btn-outline-danger\"\n                  (click)=\"deleteProduct(p.idProduit)\">Delete\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n  </div>\n</div>\n<ng-template #mymodal1 let-modal1>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add new Product</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal1.dismiss('Cross click')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"product-code\">Product Code</label>\n        <div class=\"input-group\">\n          <input id=\"Product-code\" class=\"form-control\" type=\"text\" placeholder=\"Product Code\"\n                 [(ngModel)]=\"product.codeProduit\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"product-name\">Product Name</label>\n        <div class=\"input-group\">\n          <input id=\"Product-name\" class=\"form-control\" type=\"text\" placeholder=\"Product Name\"\n                 [(ngModel)]=\"product.libelleProduit\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"product-prix\">Product Price</label>\n        <div class=\"input-group\">\n          <input id=\"Product-prix\" class=\"form-control\" type=\"number\" placeholder=\"Product Price\"\n                 [(ngModel)]=\"product.prix\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"product-cdate\">Product Creation Date</label>\n        <div class=\"input-group\">\n          <input id=\"Product-cdate\" class=\"form-control\" type=\"date\" placeholder=\"Product Creation Date\"\n                 [(ngModel)]=\"product.dateCreation\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"product-mdate\">Product Modification Date</label>\n        <div class=\"input-group\">\n          <input id=\"Product-mdate\" class=\"form-control\" type=\"date\" placeholder=\"Product Modification Date\"\n                 [(ngModel)]=\"product.dateDerniereModification\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addProduct(product)\"\n            (click)=\"modal1.close('Save click')\">Add\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal1.close('Save click')\">Cancel</button>\n  </div>\n</ng-template>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {Product} from '../shared/Model/Product';\nimport {ProductService} from '../shared/Service/Product.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  listProducts: any;\n  form: boolean = false;\n  product!: Product;\n  closeResult!: string;\n\n  constructor(private productService: ProductService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.getAllProducts();\n\n    this.product = {\n      idProduit: null,\n      codeProduit: null,\n      libelleProduit: null,\n      prix: null,\n      dateCreation: null,\n      dateDerniereModification: null\n\n    }\n  }\n\n  getAllProducts() {\n    this.productService.getAllProducts().subscribe(res => this.listProducts = res)\n  }\n\n  addProduct(p: any) {\n    this.productService.addProduct(p).subscribe(() => {\n      this.getAllProducts();\n      this.form = false;\n    });\n  }\n\n  editProduct(product: Product) {\n    this.productService.editProduct(product).subscribe();\n  }\n\n  deleteProduct(idProduct: any) {\n    this.productService.deleteProduct(idProduct).subscribe(() => this.getAllProducts())\n  }\n\n  open(content: any, action: any) {\n    if (action != null)\n      this.product = action\n    else\n      this.product = new Product();\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  cancel() {\n    this.form = false;\n  }\n}\n","export class Stock {\n    idStock:any;\n    libelleStock : any;\n    qte : any;\n    qteMin : any;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n  readonly API_URL = 'http://localhost:8089/SpringMVC/stock';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllStocks() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-stocks`)\n  }\n  addStock(stock : any) {\n    return this.httpClient.post(`${this.API_URL}/add-stock`, stock)\n  }\n  editStock(stock : any){\n    return this.httpClient.put(`${this.API_URL}/modify-stock`, stock)\n  }\n  deleteStock(idStock : any){\n    return  this.httpClient.delete(`${this.API_URL}/remove-stock/${idStock}`)\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-11\" style=\"margin-left: 20px\">\n    <h3 style=\"margin-top: 20px\">List Stock </h3>\n    <hr>\n    <button class=\"btn btn-round btn-sm btn-success\" (click)=\"open(mymodal1,null)\">Add new Stock</button>\n    <br><br>\n    <table class=\"table table-hover\">\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Libelle</th>\n        <th>Quantité</th>\n        <th>Quantité Min</th>\n        <th>Action</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor='let p of listStocks'>\n        <td>{{p.idStock}}</td>\n        <td>{{p.libelleStock}}</td>\n        <td>{{p.qte}}</td>\n        <td>{{p.qteMin}}</td>\n        <td>\n          <button type=\"button\" class=\"btn btn-outline-primary\"\n                  (click)=\"open(mymodal1,p)\">Edit\n          </button>\n          &nbsp;\n          <button type=\"button\" class=\"btn btn-outline-danger\"\n                  (click)=\"deleteStock(p.idStock)\">Delete\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n  </div>\n</div>\n<ng-template #mymodal1 let-modal1>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add new Stock</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal1.dismiss('Cross click')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"lib\">Stock Libelle</label>\n        <div class=\"input-group\">\n          <input id=\"lib\" class=\"form-control\" type=\"text\" placeholder=\"Stock Libelle\"\n                 [(ngModel)]=\"stock.libelleStock\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"qte\">Stock Qte</label>\n        <div class=\"input-group\">\n          <input id=\"qte\" class=\"form-control\" type=\"number\" placeholder=\"Stock Qte\"\n                 [(ngModel)]=\"stock.qte\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"qteM\">Stock Qte</label>\n        <div class=\"input-group\">\n          <input id=\"qteM\" class=\"form-control\" type=\"number\" placeholder=\"Stock Qte Min \"\n                 [(ngModel)]=\"stock.qteMin\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addStock(stock)\"\n            (click)=\"modal1.close('Save click')\">Add\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal1.close('Save click')\">Cancel</button>\n  </div>\n</ng-template>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {Stock} from '../shared/Model/Stock';\nimport {StockService} from '../shared/Service/Stock.service';\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent implements OnInit {\n\n  listStocks: any;\n  form: boolean = false;\n  stock!: Stock;\n  closeResult!: string;\n\n  constructor(private stockService: StockService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.getAllStockss();\n\n    this.stock = {\n      idStock: null,\n      libelleStock:null,\n      qte:null,\n      qteMin:null\n    }\n  }\n\n  getAllStockss() {\n    this.stockService.getAllStocks().subscribe(res => this.listStocks = res)\n  }\n\n  addStock(p: any) {\n    this.stockService.addStock(p).subscribe(() => {\n      this.getAllStockss();\n      this.form = false;\n    });\n  }\n\n  editStock(stock: Stock) {\n    this.stockService.editStock(stock).subscribe();\n  }\n\n  deleteStock(idStock: any) {\n    this.stockService.deleteStock(idStock).subscribe(() => this.getAllStockss())\n  }\n\n  open(content: any, action: any) {\n    if (action != null)\n      this.stock = action\n    else\n      this.stock = new Stock();\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  cancel() {\n    this.form = false;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReglementService {\n  readonly API_URL = 'http://localhost:8089/SpringMVC/reglement';\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n\n  addReglement(reglement: any) {\n    return this.httpClient.post(`${this.API_URL}/add-reglement`, reglement)\n  }\n\n  getAllReglements() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-reglements`)\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-11\" style=\"margin-left: 20px\">\n    <h3 style=\"margin-top: 20px\">List Reglement </h3>\n    <hr>\n    <button class=\"btn btn-round btn-sm btn-success\" (click)=\"open(mymodal1)\">Add new Reglement</button>\n    <br><br>\n    <table class=\"table table-hover\">\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Montant Paye</th>\n        <th>Montant Restant</th>\n        <th>Payee</th>\n        <th>Date Reglement</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor='let p of listReglement'>\n        <td>{{p.idReglement}}</td>\n        <td>{{p.montantPaye}}</td>\n        <td>{{p.montantRestant}}</td>\n        <td>{{p.payee}}</td>\n        <td>{{p.dateReglement}}</td>\n      </tr>\n      </tbody>\n    </table>\n\n  </div>\n</div>\n<ng-template #mymodal1 let-modal1>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add new Reglement</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal1.dismiss('Cross click')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"mp\">Montant Paye</label>\n        <div class=\"input-group\">\n          <input id=\"mp\" class=\"form-control\" type=\"number\" placeholder=\"Montant Paye\"\n                 [(ngModel)]=\"reglement.montantPaye\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"mr\">Montant Restant</label>\n        <div class=\"input-group\">\n          <input id=\"mr\" class=\"form-control\" type=\"number\" placeholder=\"Montant Restant\"\n                 [(ngModel)]=\"reglement.montantRestant\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"payee\">Payee</label>\n        <div class=\"input-group\">\n          <div class=\"input-group\">\n            <select id=\"payee\" class=\"form-select\" aria-label=\"Default select example\" [(ngModel)]=\"reglement.payee\"\n                    name=\"hi\">\n              <option value=\"True\">Oui</option>\n              <option value=\"False\">Non</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"mdate\">Date Reglement</label>\n          <div class=\"input-group\">\n            <input id=\"mdate\" class=\"form-control\" type=\"date\" placeholder=\"Date Reglement\"\n                   [(ngModel)]=\"reglement.dateReglement\"\n                   [ngModelOptions]=\"{standalone : true}\"></div>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addReglement(reglement)\"\n            (click)=\"modal1.close('Save click')\">Add\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal1.close('Save click')\">Cancel</button>\n  </div>\n</ng-template>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {Reglement} from '../shared/Model/Reglement';\nimport {ReglementService} from '../shared/Service/Reglement.service';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-reglement',\n  templateUrl: './reglement.component.html',\n  styleUrls: ['./reglement.component.css']\n})\nexport class ReglementComponent implements OnInit {\n\n\n  listReglement: any;\n  form: boolean = false;\n  reglement!: Reglement;\n  closeResult!: string;\n\n  constructor(private reglementService: ReglementService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.getAllReg();\n    this.reglement = {\n      idReglement:null,\n      dateReglement:null,\n      payee:null,\n      montantRestant:null,\n      montantPaye:null\n    }\n  }\n\n  getAllReg() {\n    this.reglementService.getAllReglements().subscribe(res => this.listReglement = res)\n  }\n\n  addReglement(f: any) {\n    this.reglementService.addReglement(f).subscribe(() => {\n      this.getAllReg();\n      this.form = false;\n    });\n  }\n\n  open(content: any) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  cancel() {\n    this.form = false;\n  }\n}\n","export class SecteurActivite {\n\n    idSecteurActivite:any;\n    codeSecteurActivite : any;\n    libelleSecteurActivite : any;\n    \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecteurActiviteService {\n  readonly API_URL = 'http://localhost:8089/SpringMVC/secteurActivite';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllSecteurActivites() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-secteurActivite`)\n  }\n  addSecteurActivite(secteurActivite : any) {\n    return this.httpClient.post(`${this.API_URL}/add-secteurActivite`, secteurActivite)\n  }\n  editSecteurActivite(secteurActivite : any){\n    return this.httpClient.put(`${this.API_URL}/modify-secteurActivite`, secteurActivite)\n  }\n  deleteSecteurActivite(idSecteurActivite : any){\n    return  this.httpClient.delete(`${this.API_URL}/remove-secteurActivite/${idSecteurActivite}`)\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-11\" style=\"margin-left: 20px\">\n    <h3 style=\"margin-top: 20px\">List Secteur-Activite </h3>\n    <hr>\n    <button class=\"btn btn-round btn-sm btn-success\" (click)=\"open(mymodal1,null)\">Add new Secteur-Activite</button>\n    <br><br>\n    <table class=\"table table-hover\">\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Code</th>\n        <th>Libelle</th>\n        <th>Action</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor='let p of listSec'>\n        <td>{{p.idSecteurActivite}}</td>\n        <td>{{p.codeSecteurActivite}}</td>\n        <td>{{p.libelleSecteurActivite}}</td>\n        <td>\n          <button type=\"button\" class=\"btn btn-outline-primary\"\n                  (click)=\"open(mymodal1,p)\">Edit\n          </button>\n          &nbsp;\n          <button type=\"button\" class=\"btn btn-outline-danger\"\n                  (click)=\"deleteSec(p.idSecteurActivite)\">Delete\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n  </div>\n</div>\n<ng-template #mymodal1 let-modal1>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add new Secteur-Activite</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal1.dismiss('Cross click')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"sacode\">Secteur-Activite Code</label>\n        <div class=\"input-group\">\n          <input id=\"sacode\" class=\"form-control\" type=\"text\" placeholder=\"Product Code\"\n                 [(ngModel)]=\"sec.codeSecteurActivite\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"salibelle\">Secteur-Activite libelle</label>\n        <div class=\"input-group\">\n          <input id=\"salibelle\" class=\"form-control\" type=\"text\" placeholder=\"Product Name\"\n                 [(ngModel)]=\"sec.libelleSecteurActivite\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addSec(sec)\"\n            (click)=\"modal1.close('Save click')\">Add\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal1.close('Save click')\">Cancel</button>\n  </div>\n</ng-template>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {SecteurActivite} from '../shared/Model/Secteur-activite';\nimport {SecteurActiviteService} from '../shared/Service/Secteur-activite.service';\n\n@Component({\n  selector: 'app-secteur-activite',\n  templateUrl: './secteur-activite.component.html',\n  styleUrls: ['./secteur-activite.component.css']\n})\nexport class SecteurActiviteComponent implements OnInit {\n\n  listSec: any;\n  form: boolean = false;\n  sec!: SecteurActivite;\n  closeResult!: string;\n\n  constructor(private secteurActiviteService: SecteurActiviteService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.getAllSec();\n    this.sec = {\n      idSecteurActivite:null,\n      codeSecteurActivite:null,\n      libelleSecteurActivite:null\n    }\n  }\n\n  getAllSec() {\n    this.secteurActiviteService.getAllSecteurActivites().subscribe(res => this.listSec = res)\n  }\n\n  addSec(p: any) {\n    this.secteurActiviteService.addSecteurActivite(p).subscribe(() => {\n      this.getAllSec();\n      this.form = false;\n    });\n  }\n\n  editSec(sec: SecteurActivite) {\n    this.secteurActiviteService.editSecteurActivite(sec).subscribe();\n  }\n\n  deleteSec(idSec: any) {\n    this.secteurActiviteService.deleteSecteurActivite(idSec).subscribe(() => this.getAllSec())\n  }\n\n  open(content: any, action: any) {\n    if (action != null)\n      this.sec = action\n    else\n      this.sec = new SecteurActivite();\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  cancel() {\n    this.form = false;\n  }\n}\n","export class Operateur {\n    idOperateur:any;\n\t  nom:any;\n\t  prenom:any;\n\t  password:any;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperateurService {\n  readonly API_URL = 'http://localhost:8089/SpringMVC/operateur';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllOperateurs() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-operateurs`)\n  }\n  addOperateur(operateur : any) {\n    return this.httpClient.post(`${this.API_URL}/add-operateur`, operateur)\n  }\n  editOperateur(operateur : any){\n    return this.httpClient.put(`${this.API_URL}/modify-operateur`, operateur)\n  }\n  deleteOperateur(idOperateur : any){\n    return  this.httpClient.delete(`${this.API_URL}/remove-operateur/${idOperateur}`)\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-11\" style=\"margin-left: 20px\">\n    <h3 style=\"margin-top: 20px\">List Operateur </h3>\n    <hr>\n    <button class=\"btn btn-round btn-sm btn-success\" (click)=\"open(mymodal1,null)\">Add new Operateur</button>\n    <br><br>\n    <table class=\"table table-hover\">\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Nom</th>\n        <th>Prenom</th>\n        <th>Password</th>\n        <th>Action</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor='let p of listOperateurs'>\n        <td>{{p.idOperateur}}</td>\n        <td>{{p.nom}}</td>\n        <td>{{p.prenom}}</td>\n        <td>{{p.password}}</td>\n        <td>\n          <button type=\"button\" class=\"btn btn-outline-primary\"\n                  (click)=\"open(mymodal1,p)\">Edit\n          </button>\n          &nbsp;\n          <button type=\"button\" class=\"btn btn-outline-danger\"\n                  (click)=\"deleteOperateur(p.idOperateur)\">Delete\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n  </div>\n</div>\n<ng-template #mymodal1 let-modal1>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add new Operateur</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal1.dismiss('Cross click')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"nom\">Nom</label>\n        <div class=\"input-group\">\n          <input id=\"nom\" class=\"form-control\" type=\"text\" placeholder=\"Nom\"\n                 [(ngModel)]=\"operateur.nom\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"pnom\">Prénom</label>\n        <div class=\"input-group\">\n          <input id=\"pnom\" class=\"form-control\" type=\"text\" placeholder=\"Prenom\"\n                 [(ngModel)]=\"operateur.prenom\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"pwd\">Password</label>\n        <div class=\"input-group\">\n          <input id=\"pwd\" class=\"form-control\" type=\"text\" placeholder=\"Nom\"\n                 [(ngModel)]=\"operateur.password\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addOperateur(operateur)\"\n            (click)=\"modal1.close('Save click')\">Add\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal1.close('Save click')\">Cancel</button>\n  </div>\n</ng-template>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Operateur } from '../shared/Model/Operateur';\nimport { OperateurService } from '../shared/Service/Operateur.service';\n\n@Component({\n  selector: 'app-operateur',\n  templateUrl: './operateur.component.html',\n  styleUrls: ['./operateur.component.css']\n})\nexport class OperateurComponent implements OnInit {\n\n  listOperateurs: any;\n  form: boolean = false;\n  operateur!: Operateur;\n  closeResult!: string;\n\n  constructor(private operateurService: OperateurService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.getAllOperateurs();\n    this.operateur = {\n      idOperateur:null,\n      nom:null,\n      prenom:null,\n      password:null\n    }\n  }\n\n  getAllOperateurs() {\n    this.operateurService.getAllOperateurs().subscribe(res => this.listOperateurs = res)\n  }\n\n  addOperateur(o: any) {\n    this.operateurService.addOperateur(o).subscribe(() => {\n      this.getAllOperateurs();\n      this.form = false;\n    });\n  }\n\n  editOperateur(operateur: Operateur) {\n    this.operateurService.editOperateur(operateur).subscribe();\n  }\n\n  deleteOperateur(idOperateur: any) {\n    this.operateurService.deleteOperateur(idOperateur).subscribe(() => this.getAllOperateurs())\n  }\n\n  open(content: any, action: any) {\n    if (action != null)\n      this.operateur = action\n    else\n      this.operateur = new Operateur();\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  cancel() {\n    this.form = false;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FactureService {\n  readonly API_URL = 'http://localhost:8089/SpringMVC/facture';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllFactures() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-factures`)\n  }\n  addFacture(facture : any) {\n    return this.httpClient.post(`${this.API_URL}/add-facture`, facture)\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-11\" style=\"margin-left: 20px\">\n    <h3 style=\"margin-top: 20px\">List Facture </h3>\n    <hr>\n    <button class=\"btn btn-round btn-sm btn-success\" (click)=\"open(mymodal1)\">Add new Facture</button>\n    <br><br>\n    <table class=\"table table-hover\">\n      <thead>\n      <tr>\n        <th>Id</th>\n        <th>Montant Remise</th>\n        <th>Montant Facture</th>\n        <th>Date Creation Facture</th>\n        <th>Date Derniere Modification Facture</th>\n        <th>Archivée</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor='let p of listFactures'>\n        <td>{{p.idFacture}}</td>\n        <td>{{p.montantRemise}}</td>\n        <td>{{p.montantFacture}}</td>\n        <td>{{p.dateCreationFacture}}</td>\n        <td>{{p.dateDerniereModificationFacture}}</td>\n        <td>{{p.archivee}}</td>\n      </tr>\n      </tbody>\n    </table>\n\n  </div>\n</div>\n<ng-template #mymodal1 let-modal1>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add new Facture</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal1.dismiss('Cross click')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"mr\">Montant Remise</label>\n        <div class=\"input-group\">\n          <input id=\"mr\" class=\"form-control\" type=\"number\" placeholder=\"Montant Remise\"\n                 [(ngModel)]=\"facture.montantRemise\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"mf\">Montant Facture</label>\n        <div class=\"input-group\">\n          <input id=\"mf\" class=\"form-control\" type=\"number\" placeholder=\"Montant Facture\"\n                 [(ngModel)]=\"facture.montantFacture\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"cdate\">Date Creation</label>\n        <div class=\"input-group\">\n          <input id=\"cdate\" class=\"form-control\" type=\"date\" placeholder=\"Creation Date\"\n                 [(ngModel)]=\"facture.dateCreationFacture\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"mdate\">Date Modif</label>\n        <div class=\"input-group\">\n          <input id=\"mdate\" class=\"form-control\" type=\"date\" placeholder=\"Modif Date\"\n                 [(ngModel)]=\"facture.dateDerniereModificationFacture\"\n                 [ngModelOptions]=\"{standalone : true}\"></div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"archiv\">Archivée</label>\n        <div class=\"input-group\">\n          <select id=\"archiv\" class=\"form-select\" aria-label=\"Default select example\" [(ngModel)]=\"facture.archivee\" name=\"hi\">\n            <option value=\"True\">Oui</option>\n            <option value=\"False\">Non</option>\n          </select>\n        </div>\n      </div>\n\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addFacture(facture)\"\n            (click)=\"modal1.close('Save click')\">Add\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal1.close('Save click')\">Cancel</button>\n  </div>\n</ng-template>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Facture } from '../shared/Model/Facture';\nimport { FactureService } from '../shared/Service/Facture.service';\n\n@Component({\n  selector: 'app-facture',\n  templateUrl: './facture.component.html',\n  styleUrls: ['./facture.component.css']\n})\nexport class FactureComponent implements OnInit {\n\n  listFactures: any;\n  form: boolean = false;\n  facture!: Facture;\n  closeResult!: string;\n\n  constructor(private factureService: FactureService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.getAllFactures();\n    this.facture = {\n      idFacture:null,\n      dateCreationFacture:null,\n      montantFacture:null,\n      dateDerniereModificationFacture:null,\n      montantRemise:null,\n      archivee:null\n    }\n  }\n\n  getAllFactures() {\n    this.factureService.getAllFactures().subscribe(res => this.listFactures = res)\n  }\n\n  addFacture(f: any) {\n    this.factureService.addFacture(f).subscribe(() => {\n      this.getAllFactures();\n      this.form = false;\n    });\n  }\n\n  open(content: any) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  cancel() {\n    this.form = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductsComponent } from './products/products.component';\nimport { StockComponent } from './stock/stock.component';\nimport { ReglementComponent } from './reglement/reglement.component';\nimport { SecteurActiviteComponent } from './secteur-activite/secteur-activite.component';\nimport { OperateurComponent } from './operateur/operateur.component';\nimport { FactureComponent } from './facture/facture.component';\n\n\nconst routes: Routes =[\n  { path: 'secteurActivite',  component: SecteurActiviteComponent },\n  { path: 'operateur',  component: OperateurComponent },\n  { path: 'facture',  component: FactureComponent },\n  { path: 'product',  component: ProductsComponent },\n  { path: 'stock',  component: StockComponent },\n  { path: 'reglement',  component: ReglementComponent },\n  {path: '', redirectTo: 'product', pathMatch: 'full'}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">TP Achat</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/product\">Product</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/facture\">Facture</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/operateur\">Operateur</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/reglement\">Reglement</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/secteurActivite\">Secteur-Activite</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/stock\">Stock</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crudtuto-Front';\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductsComponent } from './products/products.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModal, NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { StockComponent } from './stock/stock.component';\nimport { ReglementComponent } from './reglement/reglement.component';\nimport { SecteurActiviteComponent } from './secteur-activite/secteur-activite.component';\nimport { OperateurComponent } from './operateur/operateur.component';\nimport { FactureComponent } from './facture/facture.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    StockComponent,\n    ReglementComponent,\n    SecteurActiviteComponent,\n    OperateurComponent,\n    FactureComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModalModule,\n    RouterModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"x_google_ignoreList":[]}